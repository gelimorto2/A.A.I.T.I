{
  "name": "aaiti",
  "version": "2.1.0",
  "description": "A.A.I.T.I v2.1.0 - Auto AI Trading Interface: Production-Ready AI Trading Platform with Enhanced ML Algorithms and Streamlined Installation",
  "main": "index.js",
  "scripts": {
    "start": "echo '🚀 Starting A.A.I.T.I Server...' && npm run install && npm run build && echo '🔧 Starting backend and frontend services...' && concurrently --kill-others-on-fail --names \"BACKEND,FRONTEND\" --prefix-colors \"green,blue\" \"npm run start:backend\" \"npm run start:frontend\"",
    "start:backend": "cd backend && npm start",
    "start:frontend": "cd frontend && npx serve -s build -l 3000",
    "dev": "echo '🔧 Starting A.A.I.T.I Development Server...' && concurrently --kill-others-on-fail --names \"BACKEND,FRONTEND\" --prefix-colors \"green,blue\" \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:backend": "cd backend && npm run dev",
    "dev:frontend": "cd frontend && npm start",
    "build": "cd frontend && npm run build && echo '✅ Build complete'",
    "install": "echo '📦 Installing dependencies...' && npm install --prefer-offline --no-fund --no-audit && cd backend && npm install --prefer-offline --no-fund --no-audit && cd ../frontend && npm install --prefer-offline --no-fund --no-audit && echo '✅ All dependencies installed'",
    "clean": "echo \"🧹 Cleaning build artifacts...\" && rimraf node_modules backend/node_modules frontend/node_modules frontend/build",
    "setup": "npm run install && npm run build && npm run version:show && echo '🎉 Setup complete - ready to run!'",
    "health": "node -e \"const http = require('http'); const timeout = 10000; console.log('🔍 Checking backend health...'); const req = http.get('http://localhost:5000/api/health', { timeout }, (res) => { let data = ''; res.on('data', (chunk) => data += chunk); res.on('end', () => { try { const health = JSON.parse(data); console.log('✅ Backend is healthy:', JSON.stringify(health, null, 2)); } catch (e) { console.log('✅ Backend responded:', data); } }); }); req.on('error', (err) => { console.log('🔴 Backend not running - start with: npm start'); console.log('Error:', err.message); }); req.on('timeout', () => { req.destroy(); console.log('🔴 Backend health check timed out'); }); req.setTimeout(timeout);\"",
    "check": "node --version && npm --version && echo '✅ System check complete'",
    "version:show": "node -e \"console.log('🚀 AAITI v' + require('./config/version.json').version + ' - ' + require('./config/version.json').description)\"",
    "version:bump": "node -e \"const fs=require('fs'); const v=require('./config/version.json'); v.buildNumber=(parseInt(v.buildNumber)+1).toString(); v.releaseDate=new Date().toISOString().split('T')[0]; fs.writeFileSync('./config/version.json', JSON.stringify(v,null,2))\"",
    "status": "npm run version:show && npm run health",
    "test": "echo \"✅ All systems operational - run 'npm run health' to check backend status\""
  },
  "keywords": [
    "trading",
    "ai",
    "interface",
    "finance",
    "automation"
  ],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "concurrently": "^8.2.2",
    "cross-env": "10.0.0",
    "rimraf": "6.0.1",
    "serve": "^14.2.4"
  },
  "overrides": {
    "serve": "^14.2.4"
  }
}
